[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "open-data-pvnet"
version = "0.1.1"  # Static version
readme = { file = "README.md", content-type = "text/markdown" }
description = "An open-source project supporting solar forecasting with PVNet."
license = { text = "MIT" }
authors = [
    { name="Peter Dudfield", email="info@openclimatefix.org" }
]
keywords = ["solar forecasting", "open-source", "renewable energy", "machine learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Atmospheric Science",
]

requires-python = ">=3.9"

dependencies = [
    "numpy",
    "pandas",
    "requests",
    "xarray",
    "zarr",
    "ocf-data-sampler",
    "ocf_ml_metrics>=0.0.11",
    "huggingface-hub",
    "pydantic==2.5.3",
    "pyyaml",
    "boto3",
    "python-dotenv",
    "netcdf4",
    "h5netcdf",
    "h5py",
    "pvlive-api",
    "pytest-mock",
    "beautifulsoup4",
    "cfgrib",
    "eccodes",
    "bz2file",
]

[project.optional-dependencies]
dev = [
    "pvlive-api",
    "black",
    "ruff",
    "pre-commit",
    "setuptools",
    "wheel",
    "twine",
    "pytest",
    "pytest-cov",
    "tomli",
]

[project.scripts]
open-data-pvnet = "open_data_pvnet.main:main"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
exclude = [".ipynb_checkpoints", "tests", "configs.example"]
select = ["E", "F", "W", "C90"]
ignore = ["E501"]
target-version = "py39"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "open_data_pvnet.__version__"}
readme = {file = "README.md", content-type = "text/markdown"}

[tool.setuptools.package-data]
"open_data_pvnet" = [".env.local"]


